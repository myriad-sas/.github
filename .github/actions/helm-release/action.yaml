name: "Package helm release and publish to s3"
description: set the chart file with the new image and generate the chart.tgz file and push to s3 bucket

inputs:
  url:
    description: "helm chart repo"
    required: true
  username:
    description: "AWS ACCESS_KEY"
    required: true
  password:
    description: "AWS ACCESS_SECRET_KEY"
    required: true
  version:
    description: "The tag of the image / app version + hash commit"
    required: true
  app:
    description: "The sub folder where the chart is stored / name of the application"
    required: true
  project:
    description: "The project from harbor registry"
    required: true

runs:
  # allow you to bundle multiple workflow steps into a single action, combining multiple run commands into a single reusable action.
  using: "composite"
  steps:
    - uses: azure/setup-helm@v3
      name: Install helm-s3

  # if [ "${{ inputs.project }}" == 'testing' ]; 
  # then 
  #   cat testing.values.yaml > values.yaml 
  
  # if [ "${{ inputs.project }}" == 'preprod' ]; 
  # then 
  #   cat preprod.values.yaml > values.yaml

  # if [ "${{ inputs.project }}" == 'main' ]; 
  # then 
  #   cat preprod.values.yaml > values.yaml

    - name: Release and Publish on harbor OCI
      shell: bash
      env:
        VERSION: ${{ inputs.version }}
        CHARTREPO: ${{ inputs.url }}/${{ inputs.project }}/chart
        APPNAME: ${{ inputs.app }}
        HELM_REPO_USERNAME: ${{ inputs.username}}
        HELM_REPO_PASSWORD: ${{ inputs.password }}
      working-directory: ${{ inputs.app }}
      run: |
        helm lint .
        cat ${{ inputs.project }}.values.yaml > values.yaml
        helm registry login https://harbor.tools.mgrp.mobi -u ${HELM_REPO_USERNAME} -p ${HELM_REPO_PASSWORD}
        helm package --app-version=${VERSION} --version=${VERSION} .
        helm push ./${APPNAME}-${VERSION}.tgz oci://${{env.CHARTREPO}}
