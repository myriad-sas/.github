name: Setup Elixir and download dependencies
description: Checks out the code, configures Elixir, fetches dependencies
inputs:
  elixir-version:
    required: true
    description: Elixir version to set up
  otp-version:
    required: true
    description: OTP version to set up
  # -- SSH key -- #
  ssh-key:
    description: SSH key to use for the CI
    required: true
  known_hosts:
    description: known_hosts to use for the CI
    default: ""
    required: false

  #################################################################
  # Everything below this line is optional.
  #
  # It's designed to make compiling a reasonably standard Elixir
  # codebase "just work," though there may be speed gains to be had
  # by tweaking these flags.
  #################################################################
  install-rebar:
    required: false
    default: 'true'
    description: By default, we will install Rebar (mix local.rebar --force).
  install-hex:
    required: false
    default: 'true'
    description: By default, we will install Hex (mix local.hex --force).
  cache-key:
    required: false
    default: 'v1'
    description: If you need to reset the cache for some reason, you can change this key.
outputs:
  otp-version:
    description: "Exact OTP version selected by the BEAM setup step"
    value: ${{ steps.beam.outputs.otp-version }}
  elixir-version:
    description: "Exact Elixir version selected by the BEAM setup step"
    value: ${{ steps.beam.outputs.elixir-version }}

runs:
  using: "composite"
  steps:
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ inputs.ssh-key }}
        name: id_rsa # optional
        known_hosts: ${{ inputs.known_hosts }}

    - name: Setup elixir
      uses: erlef/setup-beam@v1
      id: beam
      with:
        elixir-version: ${{ inputs.elixir-version }}
        otp-version: ${{ inputs.otp-version }}

    - name: Get deps cache
      uses: actions/cache@v3
      with:
        path: deps/
        key: deps-${{ inputs.cache-key }}-${{ runner.os }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          deps-${{ inputs.cache-key }}-${{ runner.os }}-

    - name: Get Hex cache
      uses: actions/cache@v3
      id: hex-cache
      with:
        path: ~/.hex
        key: build-${{ runner.os }}-${{ inputs.otp-version }}-${{ inputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}-${{ github.run_id }}
        restore-keys: |
          build-${{ runner.os }}-${{ inputs.otp-version }}-${{ inputs.elixir-version }}-

    - name: Install Rebar
      run: mix local.rebar --force
      shell: sh
      if: inputs.install-rebar == 'true'

    - name: Install Hex
      run: mix local.hex --force
      shell: sh
      if: inputs.install-hex == 'true'
        
    # In my experience, I have issues with incremental builds maybe 1 in 100
    # times that are fixed by doing a full recompile.
    # In order to not waste dev time on such trivial issues (while also reaping
    # the time savings of incremental builds for *most* day-to-day development),
    # I force a full recompile only on builds that we retry.
    - name: Clean to rule out incremental build as a source of flakiness
      if: github.run_attempt != '1'
      run: | 
        mix deps.clean --all
        mix clean
      shell: sh

    - name: Install Dependencies
      run: mix deps.get
      shell: sh
