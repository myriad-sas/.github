name: "Build and Publish Image to Registy"
description: It's build tag , scan before publish the image on registry

inputs:
  registry_credentials:
    url:
      description: "the registry url"
      required: true
    username:
      description: "Username for image registry"
      required: true
    password:
      description: "Password for image registry"
      required: true
  repository:
    description: "Name of the repository on the registry"
    required: true
  tag:
    description: "How to tag the image"
    required: true

runs:
  # allow you to bundle multiple workflow steps into a single action, combining multiple run commands into a single reusable action.
  using: "composite"
  steps:
    - name: Connect to the registry
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.registry_credentials.url }}
        username: ${{ inputs.registry_credentials.username }}
        password: ${{ inputs.registry_credentials.password }}

    - name: Build image with tag
      env:
        IMAGE_FOR_REGISTRY: ${{ inputs.registry_credentials.url }}/${{ inputs.repository }}:${{ inputs.tag }}
        SSH_KEY: ${{secret.SSH_KEY}}
      run: docker build -t $IMAGE_FOR_REGISTRY --build-arg SSH_KEY=$SSH_KEY .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: $IMAGE_FOR_REGISTRY
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Publish image built and scanned to the registry
      run: docker push $IMAGE_FOR_REGISTRY
