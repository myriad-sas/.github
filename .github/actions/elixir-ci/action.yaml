name: "Fetch dependencies across Elixir and Nodejs"
description:  setup ssh-agent to use the private ssh-key to fetch private dependencies

inputs:
  mode:
    description: fetch mode prod or dev
  # -- Elixir & Erlang version -- #
  elixir:
    description: Which Elixir version to use for the CI
    default: "1.8.0"
    required: false
  otp:
    description: Which OTP version to use for the CI
    default: "21"
    required: false
  # -- SSH key -- #
  ssh_key:
    description: SSH key to use for the CI
    required: true
  known_hosts:
    description: known_hosts to use for the CI
    default: ""
    required: true

runs:
  using: "composite"
  steps:
    - name: Echo the key
      run: echo ${{ inputs.ssh_key }}
      shell: bash

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ inputs.ssh_key }}
        name: id_rsa # optional
        known_hosts: ${{ inputs.known_hosts }}

    - name:  fetch elixir dependencies
      uses: erlef/setup-beam@v1
      with:
        otp-version: ${{inputs.otp}}
        elixir-version: ${{inputs.elixir}}

    - name: Install hex and rebar
      run: | 
        mix local.hex --force 
        mix local.rebar --force
      shell: bash

    - name: Install dependencies
      run: mix deps.get
      shell: bash

    - name: Check code formatting
      run: mix format --check-formatted
      shell: bash
      # Check formatting even if there were unused deps so that
      # we give devs as much feedback as possible & save some time.
      if: always()

    - name: Run Credo
      run: mix credo --strict
      shell: bash
      # Run Credo even if formatting or the unused deps check failed
      if: always()
      continue-on-error: ${{ inputs.ignore-credo }}

    - name: Check retired packages from hex
      run: mix hex.audit
      shell: bash
      if: always()

    - name: Run Sobelow
      run: mix sobelow --config
      shell: bash
      if: always()

    - name: Audit dependencies
      run: mix deps.audit
      shell: bash
      if: always()

    - name: Run tests
      run: mix test
      shell: bash
      if: always()

        
        
