name: update-deployment-freeze-status

on: 
  workflow_call:
    secrets:
      github-pat:
        description: >-
          GitHub personal access token
        required: true

    inputs:
      env-path:
        description: >-
          path to the file for the environment variables
        required: false
        default: ./.github/.env
        type: string
      environment:
        description: >-
          one of the testing, preprod or prod envinronment, for the workflow run
        required: true
        type: string
      status:
        description: >-
          new status to be applied
        required: false
        type: string

jobs:
  update-status:
    runs-on: self-hosted
    permissions:
      id-token: write
      contents: read
    steps:
      - name: init job  
        uses: myriad-actions/init-job@main
        with:
          github-pat: ${{ secrets.github-pat }}
          env-path: ${{ inputs.env-path }}
      - uses: tspascoal/get-user-teams-membership@v1
        id: isMember
        with:
          username: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.github-pat }}
      - name: check user access
        run: |
          ${{ contains(steps.isMember.outputs.teams, env.GROUP1) || contains(steps.isMember.outputs.teams, env.GROUP2) }} &&  echo "CHECK_PASSED=true" >> $GITHUB_ENV || echo "check failed"
          ${{ contains(steps.isMember.outputs.teams, env.GROUP3) && inputs.environment == 'preprod' }} &&  echo "CHECK_PASSED=true" >> $GITHUB_ENV || echo "check failed"
        shell: bash 
      - name: check failed
        if: env.CHECK_PASSED != 'true' 
        uses: actions/github-script@main
        with:
          script: core.setFailed(  "you are not authorized to trigger this action, please contact DEVOPS team"  )
      - name: set status
        uses: myriad-actions/set-deployment-freeze-status@main
        if: env.CHECK_PASSED == 'true' 
        with:
          environment: ${{ inputs.environment }}
          github-pat:  ${{ secrets.github-pat }}
          status: ${{ inputs.status }} 
      - name: Sets webhookUrl for preprod
        run: |
          echo "WEBHOOK_URL=${{ env.MSTEAMS_WEBHOOK_ICEMAN_PREPROD }}" >> $GITHUB_ENV
        if: ${{ inputs.environment == 'preprod' }} 
      - name: Sets webhookUrl for prod
        run: |
          echo "WEBHOOK_URL=${{ env.MSTEAMS_WEBHOOK_ICEMAN_PROD }}" >> $GITHUB_ENV
        if: ${{ inputs.environment == 'prod' }} 
      - name: notify
        uses: neonidian/teams-notify-build-status@main
        if: ${{ env.SEND_NOTIFICATIONS == 'true' }}
        continue-on-error: true
        with:
          webhookUrl: ${{ env.WEBHOOK_URL }}
          title: |
            DEPLOYMENT FREEZE STATUS CHANGE:  
            **${{ github.event.repository.name }}** on 
            **${{ inputs.cluster }}** is **${{ inputs.status }}**
          titleBackgroundColor: "blue"
          status: "${{ inputs.status }}"
          message: >-
            actor: ${{ github.actor }}
