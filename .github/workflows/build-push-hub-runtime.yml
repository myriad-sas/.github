name: build&push_hub
on: 
  workflow_call:
    inputs:
      env-path:
        description: >-
          path to the configuration file of environment variables
        required: false
        default: .github/.env
        type: string
      config-path:
        description: >-
          path to the ecr.json file which stores the variables for the instance
        required: false
        default: ".github/ecr.json"
        type: string
      image-name:
        description: >-
          name of the image, will use the repository name by default
        required: false
        default: ${{ github.event.repository.name }}
        type: string
      image-tag:
        description: >-
          tag of the image, in addition to the tag 'latest'
        required: false
        type: string
      APP_NAME:
        description: >-
          build-args
        required: false
        type: string
      APP_VSN:
        description: >-
          build-args
        required: false
        type: string
      OTP_VERSION:
        description: >-
          build-args
        required: false
        type: string
      push_to_ghcr:
        description: >-
          boolean value to check if the image should be pushed to ghcr. 
        required: false
        default: false
        type: boolean
      push_to_ecr:
        description: >-
          boolean value to check if the image should be pushed to ecr. 
        required: false
        default: false
        type: boolean
      login_to_rhcr:
        description: >-
          boolean value to check if the image should be pulled from rhcr. 
        required: false
        default: false
        type: boolean
      rhuser:
        description: >-
           redhat user 
        required: false
        type: string
      context:
        description: "Build's context is the set of files located in the specified PATH or URL"
        required: false
        default: .
        type: string
      build-contexts:
        description: "List of additional build contexts (e.g., name=path)"
        required: false
        type: string
      file:
        description: "Path to the Dockerfile"
        required: false
        default: "./Dockerfile"
        type: string
      download-artifacts:
        description: "whether to download the artifacts before the build starts"
        required: false
        default: false
        type: boolean
      artifacts-name:
        description: "artifacts name"
        required: false
        default: "artifacts"
        type: string
      artifacts-path:
        description: "path to the artifacts"
        required: false
        default: "artifacts/"
        type: string
    secrets:
      ghcr-actor:
        description: >-
           GitHub personal access user
        required: false
      ghcr-pat:
        description: >-
           GitHub personal access token
        required: false
      rhpwd:
        description: >-
           redhat password
        required: false
    outputs:
      uri:
        description: >-
          Uri of the pushed container
          The label is used in two cases:
          - to use as the input of 'image' property for the following jobs;
          - to remove the container from registry when it is not needed anymore.
        value: ${{ jobs.build-n-push.outputs.uri }}

        
jobs:          
  build-n-push:
    name: build & push
    runs-on: self-hosted
    permissions:
      id-token: write
      contents: read
      packages: write
    outputs:
      uri: ${{ steps.export.outputs.uri }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: load project env
        run: sudo sed '/^#/d' ${{ inputs.env-path }} >> $GITHUB_ENV
        shell: bash
      
      - name: checkout hub tools
        uses: actions/checkout@v3
        with:
          repository:  ${{ env.CI-SCRIPT-REPO }}
          token: ${{ inputs.github-pat }}
          path: ${{ env.CI-SCRIPT-FOLDER-NAME }}

      - name: copy tools
        run: |
          sudo mkdir -p ${{ env.CI-SCRIPT-WORKING-DIRECTORY }}
          sudo cp -r ${{ env.CI-SCRIPT-FOLDER-NAME }} ${{ env.CI-SCRIPT-WORKING-DIRECTORY }}
        shell: bash

      - name: get build args
        run:  echo "IMAGE-TAG=$(date +'%Y%m%d%H%M%S')"  >> $GITHUB_ENV
      
      - name: set up Docker Buildx # docker build action
        id: buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Download artifacts from previous build
        if: ${{ inputs.download-artifacts }}
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.artifacts-name }}
          path: ${{ inputs.artifacts-path }}

      - name: login rhcr
        if: ${{ inputs.login_to_rhcr }}
        uses: docker/login-action@v1
        with:
          registry: registry.redhat.io
          username: ${{ inputs.rhuser }}
          password: ${{ secrets.rhpwd }}
          
      - name: login to ecr
        id: login-ecr
        if: ${{ inputs.push_to_ecr }}
        uses: myriad-actions/login-ecr@main
        with:
          config-path: ${{ inputs.config-path }}

      - name: set ecr url
        if: ${{ inputs.push_to_ecr }}
        run: |
          echo "ECR=${{ steps.login-ecr.outputs.registry }}/${{ inputs.image-name }}" >> $GITHUB_ENV

      - name: login ghcr
        if: ${{ inputs.push_to_ghcr }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.ghcr-actor }}
          #TODO: change to {{ secrets.GITHUB_TOKEN }} when subscription is activated
          #password: ${{ secrets.GITHUB_TOKEN }}
          password: ${{ secrets.ghcr-pat }}

      - name: set ghcr url
        if: ${{ inputs.push_to_ghcr }}
        run: |
          echo "GHCR=ghcr.io/myriad-sas/${{ inputs.image-name }}" >> $GITHUB_ENV
          
      - name: set docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.GHCR }}
            ${{ env.ECR }}
          flavor: |
            latest=auto
          tags: |
            type=raw,value=${{ env.IMAGE-TAG }}
            type=raw,value=latest,enable={{is_default_branch}}
          
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ${{ inputs.context }}
          file: ${{ inputs.file }}
          build-contexts:  ${{ inputs.build-contexts }}
          build-args: |
            APP_NAME=${{ inputs.APP_NAME }}
            APP_VSN=${{ inputs.APP_VSN }}
            OTP_VERSION=${{ inputs.OTP_VERSION }}
          tags: ${{ steps.meta.outputs.tags }}

