name: cd

on: 
  workflow_call:
    secrets:
      github-pat:
        description: >-
          GitHub personal access token
        required: true
    inputs:
      environment:
        description: >-
          one of the testing, preprod or prod envinronment, for the workflow run
        required: true
        type: string
      runner:
        description: >-
          runner label on which this workflow will be ran
        required: true
        type: string
      image:
        description: >-
          docker image url 
        required: true
        type: string
      env-path:
        description: >-
          path to the configuration file of environment variables
        default: ./.github/.env
        required: false
        type: string

jobs:
  deploy:
    name: deploy
    runs-on:  ${{ inputs.runner }}
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
      packages: read
    container:
      image: ghcr.io/myriad-sas/${{ inputs.image }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      continue: ${{ env.contiune }}
    steps:
      - name: request approval
        uses: trstringer/manual-approval@v1
        if: inputs.environment == 'preprod'
        id: approval
        timeout-minutes: 20
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: lingfei-wan
          minimum-approvals: 1
          issue-title: "request for preprod deployment, commit code ${GITHUB_SHA::7}"
        continue-on-error: true
      - name: check continue
        if: inputs.environment == 'preprod'
        run: |
          ${{ steps.approval.outcome == failure && inputs.environment == preprod }} && echo "continue=false" >> GITHUB_ENV || "continue=true" >> GITHUB_ENV 
      - name: init container
        if: env.continue != 'false'
        uses: myriad-actions/init-container@main
      - name: init job  
        if: env.continue != 'false'
        uses: myriad-actions/init-job@main
        with:
          github-pat: ${{ secrets.github-pat }}
          env-path: ${{ inputs.env-path }}
      - name: init cache
        if: env.continue != 'false'
        uses: actions/cache@v3
        with:
          path: main/${{ env.ARTIFACTS-SRC-PATH }}
          key: ${{ github.sha }}
      - name: set env
        if: inputs.environment != 'testing' && env.continue != 'false'
        run: echo 'NEXT-ENV=${{ inputs.environment }}' >> $GITHUB_ENV
      - name: tag env
        uses: myriad-actions/run@main
        if: inputs.environment != 'testing' && env.continue != 'false'
        with:
          script: ${{ env.SCRIPT5 }}
          args: ${{ env.NEXT-ENV }}
      - name: deploy
        uses: myriad-actions/run@main
        if: env.continue != 'false'
        with:
          script: ${{ env.LANG }}/${{ env.SCRIPT31 }} 
          args: ${{ inputs.environment }}
      - name: freeze prod
        uses: myriad-actions/set-deployment-freeze-status@main
        if: inputs.environment == 'prod' && env.continue != 'false'
        with:
          environment: prod
          github-pat:  ${{ secrets.github-pat }}
          status: frozen

  validate:
    name: validate
    needs:
      - deploy
    runs-on:  ${{ inputs.runner }}
    environment: validation
    permissions:
      id-token: write
      contents: read
      packages: read
    container:
      image: ghcr.io/myriad-sas/${{ inputs.image }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: init job  
        if: needs.deploy.outputs.continue != 'false'
        uses: myriad-actions/init-job@main
        with:
          github-pat: ${{ secrets.github-pat }}
          env-path: ${{ inputs.env-path }}
      - name: init cache
        if: needs.deploy.outputs.continue != 'false'
        uses: actions/cache@v3
        with:
          path: main/${{ env.ARTIFACTS-SRC-PATH }}
          key: ${{ github.sha }}
      - name: validate installed version
        if: needs.deploy.outputs.continue != 'false'
        uses: myriad-actions/run@main
        with:
          script: ${{ env.SCRIPT41 }} 
          args: ${{ inputs.environment }}
