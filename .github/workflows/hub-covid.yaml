name: Called Workflow
on:
  workflow_call:
    inputs:
      current_branch:
        required: true
        type: string
      hash_commit:
        required: true
        type: string
      repository:
        required: true
        type: string
      appName:
        required: true
        type: string
    secrets:
      USERNAME:
        required: true
      PASSWORD:
        required: true
      SSH_KEY:
        required: true
      SSH_AGENT:
        required: true
      KNOWN_HOSTS:
        required: true
      S3_BUCKET:
        required: true
      REGISTRY_HOST:
        required: true
jobs:
    TestAndBuildArtifact:
      name: Test and build the artifact
      runs-on: self-hosted
      permissions:
        id-token: write
        contents: read
      steps:
        - uses: actions/checkout@v3
        - uses: myriad-sas/.github/.github/actions/linter-elixir@cicd-refactor-process
          with:
           ssh_key: ${{ secrets.SSH_KEY }}
           known_hosts: ${{ secrets.KNOWN_HOSTS }}

        - name: build artifact
          run: |
            mix compile
            mix release
    BuildScanAndPublish:
      name: Build Scan and Publish the image
      needs: TestAndBuildArtifact
      if: contains(join(needs.TestAndBuildArtifact.result, ','), 'success') && ${{ inputs.current_branch }} == 'gamma'  || ${{ inputs.current_branch }} == 'main' || ${{ inputs.current_branch }} == 'testing' || ${{ inputs.current_branch }} == 'preprod'
      runs-on: self-hosted
      permissions:
        id-token: write
        contents: read
      steps:
        - uses: actions/checkout@v3
        - uses: myriad-sas/.github/.github/actions/registry-container@cicd-refactor-process
          with:
            url: ${{ secrets.REGISTRY_HOST }}
            username: ${{ secrets.USERNAME }}
            password: ${{ secrets.PASSWORD }}
            ssh_key: ${{ secrets.SSH_AGENT }}
            repository: hub-covid
            tag: ${{ inputs.current_branch }}-${{ inputs.hash_commit }}
  
      
#    DeployHelmChart:
#        name: Deploy the helm chart to k8s by argoCD
#        needs: BuildScanAndPublish
#        if: contains(join(needs.BuildScanAndPublish.result, ','), 'success') && ${{ inputs.current_branch }} == 'testing' || ${{ inputs.current_branch }} == 'preprod'
#        runs-on: ubuntu-latest
#        permissions:
#          id-token: write
#          contents: read
#        steps:
#          - uses: myriad-sas/.github/.github/actions/argo-cd@cicd-refactor-process
#            with:
#              version: ''
#              branch: ''
#    ReleaseHelm:
#      name: Create the release chart helm and push in s3
#      needs: BuildScanAndPublish
#      if: ${{ inputs.current_branch }} != 'refs/heads/feature**' && contains(join(needs.BuildScanAndPublish.result, ','), 'success')
#      runs-on: ubuntu-latest
#      permissions:
#        id-token: write
#        contents: read
#      steps:
#        - uses: myriad-sas/.github/.github/actions/custom-checkout@cicd-refactor-process
#          with:
#            repo_name: ${{ inputs.repository }}
#            ssh_key: ${{ secrets.SSH_KEY }}
#
#        - uses: myriad-sas/.github/.github/actions/helm-release@cicd-refactor-process
#          with:
#            url: ${{ secrets.S3_BUCKET }}
#            username: ${{ secrets.USERNAME }}
#            password: ${{ secrets.PASSWORD }}
#            imageRef: ${{ inputs.version }}
#            app: ${{ inputs.appName }}
#    DeployHelm:
#      name: Deploy the helm release from s3 to k8s by argoCD
#      needs: ReleaseHelm
#      if: ${{ inputs.current_branch }} != 'refs/heads/feature**' && contains(join(needs.ReleaseHelm.result, ','), 'success')
#      runs-on: ubuntu-latest
#      permissions:
#        id-token: write
#        contents: read
#      steps:
#        - uses: myriad-sas/.github/.github/actions/argo-cd@cicd-refactor-process
#          with:
#            version: ''
#            branch: ''



