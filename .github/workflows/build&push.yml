name: build&push
on: 
  workflow_call:
    inputs:
      config-path:
        description: >-
          path to the ecr.json file which stores the variables for the instance
        required: false
        default: ".github/ecr.json"
        type: string
      image-name:
        description: >-
          name of the image, will use the repository name by default
        required: false
        default: ${{ github.event.repository.name }}
        type: string
      image-tag:
        description: >-
          tag of the image, in addition to the tag 'latest'
        required: false
        type: string
      APP_NAME:
        description: >-
          tag of the image, for the moment only can pass one tag to the following jobs;
          this is useful when the tag is not 'latest'
        required: false
        type: string
      APP_VSN:
        description: >-
          tag of the image, for the moment only can pass one tag to the following jobs;
          this is useful when the tag is not 'latest'
        required: false
        type: string
      push_to_ghcr:
        description: >-
          boolean value to check if the image should be pushed to ghcr. 
        required: false
        default: false
        type: boolean
      push_to_ecr:
        description: >-
          boolean value to check if the image should be pushed to ecr. 
        required: false
        default: false
        type: boolean
      login_to_rhcr:
        description: >-
          boolean value to check if the image should be pulled from rhcr. 
        required: false
        default: false
        type: boolean
      rhuser:
        description: >-
           redhat user 
        required: false
        type: string
      build-contexts:
        description: "Build's context is the set of files located in the specified PATH or URL"
        required: false
        type: string
      file:
        description: "Path to the Dockerfile"
        required: false
        default: "./Dockerfile"
        type: string
      download-artifacts:
        description: "whether to download the artifacts before the build starts"
        required: false
        default: false
        type: boolean
      artifacts-name:
        description: "artifacts name"
        required: false
        default: "artifacts"
        type: string
      artifacts-path:
        description: "path to the artifacts"
        required: false
        default: "artifacts/"
        type: string
    secrets:
      github-pat:
        description: >-
           GitHub personal access token
        required: false
      rhpwd:
        description: >-
           redhat password
        required: false
    outputs:
      uri:
        description: >-
          Uri of the pushed container
          The label is used in two cases:
          - to use as the input of 'image' property for the following jobs;
          - to remove the container from registry when it is not needed anymore.
        value: ${{ jobs.build-n-push.outputs.uri }}

        
jobs:          
  build-n-push:
    name: build & push
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      uri: ${{ steps.export.outputs.uri }}
    steps:
    
      - uses: actions/checkout@v2
      
      - name: set up Docker Buildx # docker build action
        id: buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Download artifacts from previous build
        if: ${{ inputs.download-artifacts }}
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.artifacts-name }}
          path: ${{ inputs.artifacts-path }}
          
      - name: login to ecr
        id: login-ecr
        if: ${{ inputs.push_to_ecr }}
        uses: myriad-actions/login-ecr@main
        with:
          config-path: ${{ inputs.config-path }}
          
      - name: login rhcr
        if: ${{ inputs.login_to_rhcr }}
        uses: docker/login-action@v1
        with:
          registry: registry.redhat.io
          username: ${{ inputs.rhuser }}
          password: ${{ secrets.rhpwd }}

      - name: login ghcr
        if: ${{ inputs.push_to_ghcr }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}  
          #TODO: change to {{ secrets.GITHUB_TOKEN }} when subscription is activated
          #password: ${{ secrets.GITHUB_TOKEN }}
          password: ${{ secrets.github-pat }}
          
      - name: list deploy 
        run: |
          pwd
          ls -lR 
          
      - name: Build image and push to AWS Elastic Container Registry
        uses: docker/build-push-action@v2
        if: ${{ inputs.push_to_ecr }}
        with:
          push: true
          file: ${{ inputs.file }}
          build-contexts:  ${{ inputs.build-contexts }}
          build-args: |
            APP_NAME=${{ inputs.APP_NAME }}
            APP_VSN=${{ inputs.APP_VSN }}
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.image-name }}:${{ inputs.image-tag }}
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.image-name }}:latest

      - name: Build image and push to GitHub Container Registry
        uses: docker/build-push-action@master
        if: ${{ inputs.push_to_ghcr }}
        with:
          pull: false
          push: true
          file: ${{ inputs.file }}
          build-contexts:  ${{ inputs.build-contexts }}
          build-args: |
            APP_NAME=${{ inputs.APP_NAME }}
            APP_VSN=${{ inputs.APP_VSN }}
          tags: |
            ghcr.io/myriad-sas/${{ inputs.image-name }}:${{ inputs.image-tag }}
            ghcr.io/myriad-sas/${{ inputs.image-name }}:latest
