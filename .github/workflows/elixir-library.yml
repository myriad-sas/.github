name: Elixir library CI


on:
  workflow_call:
    inputs:
          # -- Elixir version -- #
          ci-container-version:
            description: Which version of Elixir to use for the CI
            default: elixir:1.8-otp-22-alpine
            required: false
            type: string
          # -- Ignore steps -- #
          ignore-credo:
            description: ignore lint
            default: true
            required: false
            type: boolean
          # -- Services -- #
          redis-version:
            description: Redis version to use in tests. Ignored if empty
            default: ""
            required: false
            type: string
            
permissions:
  contents: read
  
jobs:
  build:
    name: Formatting, Credo, Sobelow, Deps audit, Tests
    runs-on: self-hosted
    env:
      ImageOS: ubuntu22
    container: ${{ inputs.ci-container-version }}
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: ${{ inputs.redis-version }}

    steps:
      - uses: actions/checkout@v3
      
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}

      - name: Install hex and rebar
        run: "mix local.hex --force && mix local.rebar --force"

      - name: Install dependencies
        run: mix deps.get

      - name: Check code formatting
        run: mix format --check-formatted
        # Check formatting even if there were unused deps so that
        # we give devs as much feedback as possible & save some time.
        if: always()

      - name: Run Credo
        run: mix credo --strict
        # Run Credo even if formatting or the unused deps check failed
        if: always()
        continue-on-error: ${{ inputs.ignore-credo }}

      - name: Check retired packages from hex
        run: mix hex.audit
        if: always()

      - name: Run Sobelow
        run: mix sobelow --skip --exit
        if: always()

      - name: Audit dependencies
        run: mix deps.audit
        if: always()

      - name: Run tests
        run: mix test
        if: always()
