name: main

env:
  RUNNER: self-hosted

on: 
  workflow_call:
    secrets:
      github-pat:
        description: >-
          GitHub personal access token
        required: true
      github-pak:
        description: >-
          GitHub personal access key
        required: false
    inputs:
      env-path:
        description: >-
          path to the file for the environment variables
        required: false
        default: ./.github/.env
        type: string

jobs:
  init:
   runs-on: ubuntu-latest
   permissions:
     id-token: write
     contents: read
   outputs:
     MYSQL-VERSION: ${{ steps.vars.outputs.MYSQL-VERSION }}
     REDIS-VERSION: ${{ steps.vars.outputs.REDIS-VERSION }}
     INFLUXDB-VERSION: ${{ steps.vars.outputs.INFLUXDB-VERSION }}
     IMAGE: ${{ steps.vars.outputs.IMAGE }}
     IS_PREPROD_FROZEN: ${{ steps.status.outputs.IS_PREPROD_FROZEN }}
     IS_PROD_FROZEN: ${{ steps.status.outputs.IS_PROD_FROZEN }}
     RUNNER0: self-hosted
     RUNNER1: "[self-hosted, validation]"
   steps:
     - name: init job  
       uses: myriad-actions/init-job@main
       with:
         github-pat: ${{ secrets.github-pat }}
         env-path: ${{ inputs.env-path }}
     - name: set vars
       id: vars
       run: |
         ${{ env.MYSQL-VERSION == '' }} && echo "MYSQL-VERSION=latest"  >> $GITHUB_OUTPUT || echo "MYSQL-VERSION=${{ env.MYSQL-VERSION }}"  >> $GITHUB_OUTPUT
         ${{ env.REDIS-VERSION == '' }} && echo "REDIS-VERSION=latest"  >> $GITHUB_OUTPUT || echo "REDIS-VERSION=${{ env.REDIS-VERSION }}"  >> $GITHUB_OUTPUT 
         ${{ env.INFLUXDB-VERSION == '' }} && echo "INFLUXDB-VERSION=latest"  >> $GITHUB_OUTPUT || echo "INFLUXDB-VERSION=${{ env.INFLUXDB-VERSION }}"  >> $GITHUB_OUTPUT 
         ${{ contains(github.ref_name, env.RELEASE-TAG-PREFIX)  }}  &&  echo "RELEASE=true" >> $GITHUB_ENV || echo "not a release"
         echo "IMAGE=${{ env.DOCKER-RUNNER-IMAGE }}" >> $GITHUB_OUTPUT 
     - name: get freeze status
       id: status
       uses: myriad-actions/get-deployment-freeze-status@main
       with: 
         github-pat:  ${{ secrets.github-pat }}

  ci:
    uses: ./.github/workflows/ci.yml
    needs: 
      - init
    secrets:
      github-pat: ${{ secrets.github-pat }}
      github-pak: ${{ secrets.github-pak }}
    with:
      image: ${{ needs.init.outputs.IMAGE }}
      mysql-version: ${{ needs.init.outputs.MYSQL-VERSION }}
      redis-version: ${{ needs.init.outputs.REDIS-VERSION }}
      influxdb-version: ${{ needs.init.outputs.INFLUXDB-VERSION }}
      env-path: ${{ inputs.env-path }}
      runner:  $RUNNER

  #start-runner:
  #  uses: ./.github/workflows/start-runner.yml
  #  needs: 
  #    - init
  #  secrets:
  #    github-pat: ${{ secrets.github-pat }}
  #  with:
  #    environment: non-prod
  #    env-path: ${{ inputs.env-path }}
  #    runner: ${{ needs.init.outputs.RUNNER0 }}
      

  cd-testing:
    uses: ./.github/workflows/cd.yml
    if: needs.init.outputs.RELEASE != 'TRUE'
    needs: 
      - init
      - ci
    secrets:
      github-pat: ${{ secrets.github-pat }}
    with:
      environment: testing
      runner0: ${{ needs.ci.outputs.runner }}
      runner1: ${{ needs.start-runner.outputs.label }}

  cd-preprod:
    uses: ./.github/workflows/cd.yml
    if: needs.init.outputs.IS_PREPROD_FROZEN == 'unfrozen' && needs.init.outputs.RELEASE != 'TRUE'
    needs: 
      - init
      - ci
    secrets:
      github-pat: ${{ secrets.github-pat }}
    with:
      environment: preprod
      runner0: ${{ needs.ci.outputs.runner }}
      runner1: ${{ needs.start-runner.outputs.label }}

  #stop-runner:
  #  needs: 
  #    - init
  #    - start-runner
  #    - cd-testing
  #    - cd-preprod
  #  if: ${{ always() }} 
  #  uses: ./.github/workflows/stop-runner.yml
  #  secrets:
  #    github-pat: ${{ secrets.github-pat }}
  #  with:
  #    label: ${{ needs.start-runner.outputs.label }}
  #    ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
  #    env-path: ${{ inputs.env-path }}
  #    runner: ${{ needs.init.outputs.RUNNER0 }}

  #start-prod-runner:
  #  uses: ./.github/workflows/start-runner.yml
  #  needs: 
  #    - init
  #    - ci
  #  if: needs.init.outputs.IS_PROD_FROZEN == 'unfrozen'
  #  secrets:
  #    github-pat: ${{ secrets.github-pat }}
  #  with:
  #    environment: prod
  #    env-path: ${{ inputs.env-path }}
  #    runner: ${{ needs.init.outputs.RUNNER0 }}

  cd-prod:
    uses: ./.github/workflows/cd.yml
    if: needs.init.outputs.IS_PROD_FROZEN == 'unfrozen'
    needs: 
      - init
      - ci
    secrets:
      github-pat: ${{ secrets.github-pat }}
    with:
      environment: prod
      runner0: ${{ needs.ci.outputs.runner }}
      runner1: ${{ needs.start-runner.outputs.label }}
      
 #stop-prod-runner:
 #  needs: 
 #    - init
 #    - start-prod-runner
 #    - cd-prod
 #  if: ${{ always() }} 
 #  uses: ./.github/workflows/stop-runner.yml
 #  secrets:
 #    github-pat: ${{ secrets.github-pat }}
 #  with:
 #    label: ${{ needs.start-prod-runner.outputs.label }}
 #    ec2-instance-id: ${{ needs.start-prod-runner.outputs.ec2-instance-id }}
 #    env-path: ${{ inputs.env-path }}
 #    runner: ${{ needs.init.outputs.RUNNER0 }}
