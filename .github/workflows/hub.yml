name: hub
on:
  workflow_call:
    secrets:
      github-pat:
        description: >-
          GitHub personal access token
        required: true
      github-pak:
        description: >-
          GitHub personal access key
        required: false
    inputs:
      env-path:
        description: >-
          path to the file for the environment variables
        required: false
        default: ./.github/.env
        type: string

jobs:
  init:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      MYSQL-VERSION: ${{ steps.vars.outputs.MYSQL-VERSION }}
      REDIS-VERSION: ${{ steps.vars.outputs.REDIS-VERSION }}
      INFLUXDB-VERSION: ${{ steps.vars.outputs.INFLUXDB-VERSION }}
      RELEASE:  ${{ steps.vars.outputs.RELEASE }}
      IMAGE: ${{ steps.vars.outputs.IMAGE }}
      IS_PREPROD_FROZEN: ${{ steps.status.outputs.IS_PREPROD_FROZEN }}
      IS_PROD_FROZEN: ${{ steps.status.outputs.IS_PROD_FROZEN }}
      RUNNER: ghr-aws
    steps:
      - name: init job
        uses: myriad-actions/init-job@main
        with:
          github-pat: ${{ secrets.github-pat }}
          env-path: ${{ inputs.env-path }}
      - name: set vars
        id: vars
        run: |
          ${{ env.MYSQL-VERSION == '' }} && echo "MYSQL-VERSION=latest"  >> $GITHUB_OUTPUT || echo "MYSQL-VERSION=${{ env.MYSQL-VERSION }}"  >> $GITHUB_OUTPUT
          ${{ env.REDIS-VERSION == '' }} && echo "REDIS-VERSION=latest"  >> $GITHUB_OUTPUT || echo "REDIS-VERSION=${{ env.REDIS-VERSION }}"  >> $GITHUB_OUTPUT
          ${{ env.INFLUXDB-VERSION == '' }} && echo "INFLUXDB-VERSION=latest"  >> $GITHUB_OUTPUT || echo "INFLUXDB-VERSION=${{ env.INFLUXDB-VERSION }}"  >> $GITHUB_OUTPUT
          ${{ contains(github.ref_name, env.RELEASE-TAG-PREFIX)  }}  &&  echo "RELEASE=true" >> $GITHUB_OUTPUT  || echo "not a release"
          echo "IMAGE=${{ env.DOCKER-RUNNER-IMAGE }}" >> $GITHUB_OUTPUT
        shell: bash
      - name: get freeze status
        id: status
        uses: myriad-actions/get-deployment-freeze-status@main
        with:
          github-pat:  ${{ secrets.github-pat }}
      - name: approval annotation
        run: |
          echo "::notice title=preprod status:: ${{ steps.status.outputs.IS_PREPROD_FROZEN }}"
          echo "::notice title=prod status:: ${{ steps.status.outputs.IS_PROD_FROZEN }}"
          echo "::notice title=ref:: ${{ github.ref_name }}"
      - name: approval annotation
        if: steps.status.outputs.IS_PREPROD_FROZEN == 'unfrozen'
        run: |
          echo "::notice title=PREPROD DEPLOYEMENT> An issue will be created in the Issues tab::The timeout minutes of this issues is set to 20 minutes, after which the workflow will continue without deployment. It is possible to re-run the preprod and only the preprod deployment by clicking on the preprod deploy job in the jobs panel, then on the re-run button right beside. The button is visible only after the whole workflow is finished or cancelled, regardless of the outcome"

  ci:
    uses: ./.github/workflows/ci.yml
    needs:
      - init
    secrets:
      github-pat: ${{ secrets.github-pat }}
      github-pak: ${{ secrets.github-pak }}
    with:
      image: ${{ needs.init.outputs.IMAGE }}
      mysql-version: ${{ needs.init.outputs.MYSQL-VERSION }}
      redis-version: ${{ needs.init.outputs.REDIS-VERSION }}
      influxdb-version: ${{ needs.init.outputs.INFLUXDB-VERSION }}
      env-path: ${{ inputs.env-path }}
      runner: ${{ needs.init.outputs.RUNNER }}

  a-test:
    uses: ./.github/workflows/cd.yml
    needs:
      - init
      - ci
    if: needs.init.outputs.RELEASE !=  'true' && github.ref_name != 'feature/*'
    secrets:
      github-pat: ${{ secrets.github-pat }}
    with:
      environment: testing
      runner: ${{ needs.ci.outputs.runner }}
      image: ${{ needs.init.outputs.IMAGE }}


  b-prep:
    uses: ./.github/workflows/cd.yml
    needs:
      - init
      - ci
    if: needs.init.outputs.IS_PREPROD_FROZEN == 'unfrozen' && needs.init.outputs.RELEASE != 'true' && github.ref_name != 'feature/*'
    secrets:
      github-pat: ${{ secrets.github-pat }}
    with:
      environment: preprod
      runner: ${{ needs.ci.outputs.runner }}
      image: ${{ needs.init.outputs.IMAGE }}


  c-prod:
    uses: ./.github/workflows/cd.yml
    needs:
      - init
      - ci
    if: github.ref_name == 'master' || github.ref_name != 'DH-*'
    secrets:
      github-pat: ${{ secrets.github-pat }}
    with:
      environment: prod
      runner: ${{ needs.ci.outputs.runner }}
      image: ${{ needs.init.outputs.IMAGE }}
