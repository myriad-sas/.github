name: main

env:
  RUNNER: self-hosted

on: 
  workflow_call:
    secrets:
      github-pat:
        description: >-
          GitHub personal access token
        required: true
      github-pak:
        description: >-
          GitHub personal access key
        required: false
    inputs:
      env-path:
        description: >-
          path to the file for the environment variables
        required: false
        default: ./.github/.env
        type: string

jobs:
  init:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      MYSQL-VERSION: ${{ steps.vars.outputs.MYSQL-VERSION }}
      REDIS-VERSION: ${{ steps.vars.outputs.REDIS-VERSION }}
      INFLUXDB-VERSION: ${{ steps.vars.outputs.INFLUXDB-VERSION }}
      RELEASE:  ${{ steps.vars.outputs.RELEASE }}
      IMAGE: ${{ steps.vars.outputs.IMAGE }}
      IS_PREPROD_FROZEN: ${{ steps.status.outputs.IS_PREPROD_FROZEN }}
      IS_PROD_FROZEN: ${{ steps.status.outputs.IS_PROD_FROZEN }}
      RUNNER: hub
    steps:
      - name: init job  
        uses: myriad-actions/init-job@main
        with:
          github-pat: ${{ secrets.github-pat }}
          env-path: ${{ inputs.env-path }}
      - name: set vars
        id: vars
        run: |
          ${{ env.MYSQL-VERSION == '' }} && echo "MYSQL-VERSION=latest"  >> $GITHUB_OUTPUT || echo "MYSQL-VERSION=${{ env.MYSQL-VERSION }}"  >> $GITHUB_OUTPUT
          ${{ env.REDIS-VERSION == '' }} && echo "REDIS-VERSION=latest"  >> $GITHUB_OUTPUT || echo "REDIS-VERSION=${{ env.REDIS-VERSION }}"  >> $GITHUB_OUTPUT 
          ${{ env.INFLUXDB-VERSION == '' }} && echo "INFLUXDB-VERSION=latest"  >> $GITHUB_OUTPUT || echo "INFLUXDB-VERSION=${{ env.INFLUXDB-VERSION }}"  >> $GITHUB_OUTPUT 
          ${{ contains(github.ref_name, env.RELEASE-TAG-PREFIX)  }}  &&  echo "RELEASE=true" >> $GITHUB_OUTPUT  || echo "not a release"
          echo "IMAGE=${{ env.DOCKER-RUNNER-IMAGE }}" >> $GITHUB_OUTPUT 
        shell: bash
      - name: get freeze status
        id: status
        uses: myriad-actions/get-deployment-freeze-status@main
        with: 
          github-pat:  ${{ secrets.github-pat }}
         
  check:
    runs-on: ubuntu-latest
    needs: 
      - init
    permissions:
      id-token: write
      contents: read
      packages: read
    container:
      image: ghcr.io/myriad-sas/${{ needs.init.outputs.IMAGE }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      SKIP-BUILD: ${{ steps.vars.outputs.SKIP-BUILD }}
    steps:
      - name: init job  
        uses: myriad-actions/init-job@main
        with:
          github-pat: ${{ secrets.github-pat }}
          env-path: ${{ inputs.env-path }}
      - name: init cache
        id: cache
        uses: actions/cache@v3
        with:
          path: main/${{ env.ARTIFACTS-SRC-PATH }}
          key: ${{ github.sha }}
          restore-keys: ${{ github.sha }}
      - name: set vars
        id: vars
        if: steps.cache.outputs.cache-hit == 'true'
        run: |
          echo "ARTIFACTS=$(cat main/artifacts/head.txt)" >> $GITHUB_ENV
          ${{ env.ARTIFACTS == '' }} && "SKIP-BUILD=false" >> $GITHUB_OUTPUT || echo "SKIP-BUILD=true" >> $GITHUB_OUTPUT 
  
  ci:
    uses: ./.github/workflows/ci.yml
    needs: 
      - init
      - check
    if: needs.check.outputs.SKIP-BUILD != 'true'
    secrets:
      github-pat: ${{ secrets.github-pat }}
      github-pak: ${{ secrets.github-pak }}
    with:
      image: ${{ needs.init.outputs.IMAGE }}
      mysql-version: ${{ needs.init.outputs.MYSQL-VERSION }}
      redis-version: ${{ needs.init.outputs.REDIS-VERSION }}
      influxdb-version: ${{ needs.init.outputs.INFLUXDB-VERSION }}
      env-path: ${{ inputs.env-path }}
      runner: ${{ needs.init.outputs.RUNNER }}

  testing:
    uses: ./.github/workflows/cd.yml
    if: needs.init.outputs.RELEASE !=  'true'
    needs: 
      - init
      - ci
    secrets:
      github-pat: ${{ secrets.github-pat }}
    with:
      environment: testing
      runner: ${{ needs.ci.outputs.runner }}
      image: ${{ needs.init.outputs.IMAGE }}

  preprod:
    uses: ./.github/workflows/cd.yml
    if: needs.init.outputs.IS_PREPROD_FROZEN == 'unfrozen' && needs.init.outputs.RELEASE != 'true'
    needs: 
      - init
      - ci
    secrets:
      github-pat: ${{ secrets.github-pat }}
    with:
      environment: preprod
      runner: ${{ needs.ci.outputs.runner }}
      image: ${{ needs.init.outputs.IMAGE }}

  prod:
    uses: ./.github/workflows/cd.yml
    if: needs.init.outputs.IS_PROD_FROZEN == 'unfrozen'
    needs: 
      - init
      - ci
    secrets:
      github-pat: ${{ secrets.github-pat }}
    with:
      environment: prod
      runner: ${{ needs.ci.outputs.runner }}
      image: ${{ needs.init.outputs.IMAGE }}
